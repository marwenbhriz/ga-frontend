name: Build and Deploy GA Frontend to GKE
on:
  pull_request:
    branches:
      - master
    types:
      - closed
env:
  #PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  PROJECT_ID: grasys-study
  GKE_CLUSTER: ga-gke
  GKE_ZONE: asia-northeast1-a
  DEPLOYMENT_NAME: ga-frontend
  IMAGE: static-site
  REGION: asia-northeast1
  GAR_LOCATION: asia-northeast1-docker.pkg.dev/containers/ga-frontend

jobs:
  notify-started:
    uses: ./.github/workflows/_notify_started.yaml
    secrets: inherit

  setup-scan-build-scan-publish-deploy:
    name: Setup Scan Build Scan Publish Deploy
    runs-on: ubuntu-latest
    environment: production
    needs: notify-started
    permissions: write-all
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
        SONAR_HOST_URL: ${{secrets.SONAR_HOST_URL}}

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}
        credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

    - name: "Set up Cloud SDK"
      uses: "google-github-actions/setup-gcloud@v1"

    - name: "Use gcloud CLI"
      run: "gcloud info"

    # Get the GKE credentials so we can deploy to the cluster
    #- uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
      #with:
        #cluster_name: ${{ env.GKE_CLUSTER }}
        #location: ${{ env.REGION }}
        #project_id: ${{ env.PROJECT_ID }}
        #credentials: ${{ secrets.GKE_KEY }}

    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

    - id: 'get-credentials'
      uses: 'google-github-actions/get-gke-credentials@v2'
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.REGION }}

    - name: "Docker auth"
      run: |-
        gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet
    
    ## Due Unauthenticated requests do not have permission "artifactregistry.repositories.downloadArtifacts" am going to use dockerhub instead of artificat registry, i need to request this roles to sa.
    # Build the Docker image
    #- name: Build
      #run: |-
        #docker build \
          #--tag "asia-northeast1-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/ga-upstream-repo/ga-frontend:$GITHUB_SHA" \
          #--build-arg GITHUB_SHA="$GITHUB_SHA" \
          #--build-arg GITHUB_REF="$GITHUB_REF" \
          #.

    # Push the Docker image to Google Container Registry
    #- name: Publish
      #run: |-
        #docker push "asia-northeast1-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/ga-upstream-repo/ga-frontend:$GITHUB_SHA"

    
    - name: Log in to Docker Hub
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: my-docker-hub-namespace/my-docker-hub-repository

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag ga-frontend \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # tag image to push to dockerhub
    - name: Tag
      run: |-
        docker tag ga-frontend "marbenhriz/ga-frontend:latest"

    # Push the Docker image to dockerhub
    - name: Publish
      run: |-
        docker push "marbenhriz/ga-frontend:latest"

    - name: Run trivy for docker image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ga-frontend
        format: 'sarif'
        output: 'trivy-results.sarif'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        ./kustomize edit set marbenhriz/ga-frontend:latest
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide

  notify-finished:
    if: always()
    needs: setup-scan-build-scan-publish-deploy
    uses: ./.github/workflows/_notify_finished.yaml
    secrets: inherit 